@inherits LayoutComponentBase
@inject IFirebaseAuthService FirebaseAuthService
@inject NavigationManager NavigationManager
@using Firebase.Auth

<style type="text/css">
	html, main {
		min-height: 100vh;
	}

	.secondary-bg {
	@*background-image: linear-gradient(to top left, #8665f4, #b692eb, #2e9eef);*@ 
	background-color: #EECACA;
	}

	main {
		flex: 1;
	}

	a {
		color: #FFFEFE;
		text-decoration: none;
	}

		a:hover {
			color: #eebbfe;
		}

		a.disabled {
			pointer-events: none;
			cursor: default;
		}

	.nav-text {
		text-align: center;
		font-size: 120%;
	}

</style>

<main class="text-light secondary-bg">
	<div class="container-fluid">
		<div class="bg-dark rounded-bottom px-2 shadow">
			<div class="bg-dark p-2 nav-text">
				<div class="d-flex justify-content-between align-items-center flex-wrap">
					<a href="#">TomaNota</a>
					<div class="d-flex align-items-center">
						@if (FirebaseAuthService.FirebaseAuthClient.User == null)
						{
							<h5 class="mx-2 align-middle mt-2">Welcome!</h5>
							<button class="btn btn-light mx-1" @onclick="NavigateToLogin">Log In</button>
							<button class="btn btn-light mx-1" @onclick="NavigateToSignUp">Sign Up</button>
						}
						else
						{
							<h5 class="mx-2 align-middle mt-2">Logged in as: @FirebaseAuthService.FirebaseAuthClient.User.Info.DisplayName.ToString()</h5>
							<button class="btn btn-light mx-1" @onclick="SignOut">Sign Out</button>
						}
					</div>
				</div>
			</div>
		</div>

		<div class="py-5">
			@Body
		</div>

	</div>
</main>

@code {
	protected override async Task OnInitializedAsync()
	{

	}

	async void SignOut()
	{
		FirebaseAuthService.FirebaseAuthClient.SignOut();
		NavigationManager.NavigateTo("/", true);
	}

	void NavigateToLogin()
	{
		NavigationManager.NavigateTo("/log-in");
	}

	void NavigateToSignUp()
	{
		NavigationManager.NavigateTo("/sign-up");
	}
}
