@page "/prompt-creation"
@using System.Text.Json
@using System.Text
@using System.Net.Http.Json
@using Google.Cloud.Firestore
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IFirebaseAuthService FirebaseAuthService

<PageTitle>TomaNota - Prompt Creation</PageTitle>

<style>
	.form-group {
		display: flex;
		flex: 0 0 auto;
		flex-flow: row wrap;
		align-items: center;
		margin-bottom: 1em;
	}
</style>

<div class="container">
	<div class="card bg-dark">
		<div class="card-header">
			<h3>Create Notes</h3>
		</div>
		<div class="card-body">
			<div class="container">
				<div class="mb-3">
					<label for="title">Title</label>
					<input class="form-control" type="text" id="title" @bind="noteTitle"/>
				</div>

				@*@foreach (List<string> note in newNotes)
				{
					<form>
						<div class="form-group">
							<label for="heading_input_@inputs">Given heading @inputs</label>
							<input class="form-control" type="text" id="heading_input_@inputs" @bind="note" />
							<label for="answer_input_@inputs">Answer @inputs</label>
							<input class="form-control" type="text" id="anser_input_@inputs" />
						</div>
					</form>
				}*@
				@for (int i = 1; i <= inputs; i++)
				{
					<form>
						<div class="form-group">
							<label for="heading_input_@i">Given heading @i</label>
							<input class="form-control" type="text" id="heading_input_@i" @bind="heading1" />
							<label for="answer_input_@i">Answer @i</label>
							<input class="form-control" type="text" id="anser_input_@i" @bind="body1" />
						</div>
					</form>
				}
				@if (inputs > 10)
				{
					<h4 class="text-danger">Documents that are too large can be very difficult</h4>
				}
				<div class="d-flex justify-content-between">
					<div>
						<button class="btn btn-light m-1" @onclick="ExtendInput">Add Entry</button>
						<button class="btn btn-secondary m-1" @onclick="RemoveInput">Remove Entry</button>
					</div>
					<div>
						<button class="btn btn-success ms-auto" @onclick="CreateNotes">Save Notes</button>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@code {
	List<List<string>> newNotes { get; set; }
	int inputs = 1;
	string noteTitle = "";
	string heading1 { get; set; }
	string body1 { get; set; }
	private static readonly HttpClient client = new HttpClient();


	protected override async Task OnInitializedAsync()
	{
		if (FirebaseAuthService.FirebaseAuthClient.User == null)
		{
			// Navigate to home page if user has not signed in
			NavigationManager.NavigateTo("/");
		}
	}

	public void ExtendInput()
	{
		inputs = inputs + 1;	
	}
	public void RemoveInput()
	{
		if (inputs > 1)
		{
			inputs = inputs - 1;	
		}
	}

	public async Task CreateNotes()
	{
		Console.WriteLine("In function");
		if (noteTitle != string.Empty)
		{
			Console.WriteLine("After IF");
			string key = "X00162027";
			string user = FirebaseAuthService.FirebaseAuthClient.User.Info.DisplayName.ToString();

			// [FromRoute] string keyIn, [FromRoute] string userIn, [FromRoute] string titleIn, [FromBody] List<List<object>> PromptsIn, [FromRoute] int scoreIn
			// "newNote/key/{keyIn}/{userIn}/{titleIn}/{scoreIn}"
			var content = "[";
			for (int i = 0; i < inputs - 1; i++)
			{
				content += $"[\"{heading1}\", \"{body1}\"],";
			}
			content += $"[\"{heading1}\", \"{body1}\"]]";
			// var json = JsonSerializer.Serialize(content);
			var Content = new StringContent(content, Encoding.UTF8, "application/json");
			// var Content = new StringContent(content);
			//var Content = new (json);
			var uri = $"https://localhost:7080/userNotes/newNote/key/{key}/userIn/{user}/titleIn/{noteTitle}/scoreIn/0";
			// Console.WriteLine("URI: " + uri + content);


			await client.PostAsync(uri, Content);
		}

	}
}
