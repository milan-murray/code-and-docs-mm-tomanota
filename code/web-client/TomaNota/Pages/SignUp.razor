@page "/sign-up"
@inject NavigationManager NavigationManager
@inject IFirebaseAuthService FirebaseAuthService

<style>
	.form-group {
		display: flex;
		flex: 0 0 auto;
		flex-flow: row wrap;
		align-items: center;
		margin-bottom: 1em;
	}
</style>

<div class="container">
	<div class="card bg-dark">
		<div class="card-header">
			<h3>Sign Up</h3>
		</div>
		<div class="card-body">
			<div class="container">
				<form>
					<div class="form-group">
						<label for="username">Username:</label>
						<input class="form-control" id="username" type="text" @bind="@Username" autocomplete="off" />
					</div>
					<div class="form-group">
						<label for="email">Email:</label>
						<input class="form-control" id="email" type="email" @bind="@Email" autocomplete="off" />
					</div>
					<div class="form-group">
						<label for="password">Password:</label>
						<input class="form-control" id="password" type="password" @bind="@Password" />
					</div>
				</form>
				<button class="btn btn-light ms-auto" @onclick="SignUpNewUser">Sign Up</button>
				<h4 class="text-danger text-sm-start">@ErrorText</h4>
			</div>
		</div>
	</div>
</div>



@code {
	String Email= "";
	String Password = "";
	String Username = "";
	String ErrorText = "";

	async Task SignUpNewUser()
	{
		try
		{
			var userCredential = await FirebaseAuthService.FirebaseAuthClient.CreateUserWithEmailAndPasswordAsync(Email, Password, Username);
			Console.WriteLine(userCredential.User.ToString());
			NavigationManager.NavigateTo("/");
		}
		catch(Exception e)
		{
			Console.WriteLine(e.Message);
			ErrorText = "Invalid email or password";

		}

		
		// Console.WriteLine(Javascript.InvokeAsync<String>("firebaseCreateUser", Username, Password));
	}
}
